# Generated by Django 2.0.7 on 2018-09-05 14:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Electron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=188, verbose_name='名称')),
                ('model_name', models.CharField(max_length=188, unique=True, verbose_name='型号')),
                ('views', models.IntegerField(blank=True, null=True, verbose_name='浏览量')),
                ('images', models.TextField(blank=True, null=True, verbose_name='图片地址')),
                ('is_supply', models.BooleanField(default=False, verbose_name='平台有无货')),
                ('is_hot', models.BooleanField(default=False, verbose_name='是否热销')),
                ('factory', models.CharField(blank=True, max_length=366, null=True, verbose_name='产商')),
                ('source_web', models.CharField(max_length=366, verbose_name='来源站点')),
                ('platform_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='平台价格')),
                ('specifc', models.CharField(blank=True, max_length=388, null=True, verbose_name='特性')),
                ('kwargs', models.CharField(blank=True, max_length=188, null=True, verbose_name="参数编号(','分隔)")),
                ('kwargs_values', models.CharField(blank=True, max_length=388, null=True, verbose_name="参数值(','分隔)")),
                ('desc_specific', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('data_sheet_name', models.CharField(blank=True, max_length=188, null=True, verbose_name='数据表名称')),
                ('data_sheet', models.CharField(blank=True, max_length=388, null=True, verbose_name='数据表')),
                ('origin', models.CharField(blank=True, choices=[('1', '国内'), ('0', '国外')], max_length=266, null=True, verbose_name='产地')),
                ('market_date_at', models.DateTimeField(null=True, verbose_name='上市时间')),
                ('factory_link', models.CharField(blank=True, max_length=266, null=True, verbose_name='原厂链接')),
                ('linkman', models.CharField(blank=True, max_length=166, null=True, verbose_name='联系人')),
                ('phone', models.CharField(blank=True, max_length=166, null=True, verbose_name='联系电话')),
            ],
            options={
                'verbose_name': '电子元器件',
                'verbose_name_plural': '电子元器件',
                'db_table': 'm_electron',
            },
        ),
        migrations.CreateModel(
            name='ElectronCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=188, unique=True, verbose_name='类型')),
                ('image', models.CharField(blank=True, max_length=512, null=True, verbose_name='类型图片')),
            ],
            options={
                'verbose_name': '电子元器件类型',
                'verbose_name_plural': '电子元器件类型',
                'db_table': 'm_electron_category',
            },
        ),
        migrations.CreateModel(
            name='ElectronCircuitDiagram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=188, verbose_name='电路图名称')),
                ('diagram', models.TextField(blank=True, null=True, verbose_name='图片地址')),
            ],
            options={
                'verbose_name': '电路图',
                'verbose_name_plural': '电路图',
                'db_table': 'm_circuit_diagram',
            },
        ),
        migrations.CreateModel(
            name='ElectronConsumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ispay', models.BooleanField(default=False, verbose_name='是否支付')),
                ('ishare', models.BooleanField(default=False, verbose_name='是否分享')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '已支付元器件',
                'verbose_name_plural': '已支付元器件',
                'db_table': 'm_electron_consumer',
            },
        ),
        migrations.CreateModel(
            name='ElectronKwargs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cname', models.CharField(max_length=188, unique=True, verbose_name='名称')),
                ('ename', models.CharField(max_length=188, verbose_name='英文名')),
                ('is_contrast', models.BooleanField(default=False, verbose_name='是否是比较参数')),
                ('is_substitute', models.BooleanField(default=False, verbose_name='是否是对比参数')),
            ],
            options={
                'verbose_name': '元器件参数',
                'verbose_name_plural': '元器件参数',
                'db_table': 'm_electron_kwargs',
            },
        ),
        migrations.CreateModel(
            name='ElectronKwargsValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='参数值', max_length=166, verbose_name='参数值')),
            ],
            options={
                'verbose_name': '元器件参数值',
                'verbose_name_plural': '元器件参数值',
                'db_table': 'm_electron_kwargs_value',
            },
        ),
        migrations.CreateModel(
            name='ElectronSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('inventory', models.IntegerField(null=True, verbose_name='存量')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='价格')),
                ('batch_no', models.CharField(max_length=188, verbose_name='批号')),
            ],
            options={
                'verbose_name': '供应商元器件',
                'verbose_name_plural': '供应商元器件',
                'db_table': 'm_electron_supplier',
            },
        ),
        migrations.CreateModel(
            name='ElectronVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('url', models.TextField(blank=True, null=True, verbose_name='视频地址')),
                ('title', models.CharField(max_length=188, verbose_name='标题')),
                ('ispay', models.BooleanField(default=False, verbose_name='是否支付')),
                ('ishare', models.BooleanField(default=False, verbose_name='是否分享')),
                ('is_primary', models.BooleanField(default=False, verbose_name='是否是主视频')),
            ],
            options={
                'verbose_name': '元器件视频',
                'verbose_name_plural': '元器件视频',
                'db_table': 'm_electron_video',
            },
        ),
        migrations.CreateModel(
            name='PinToPin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'PinToPin',
                'verbose_name_plural': 'PinToPin',
                'db_table': 'm_pintopin',
            },
        ),
        migrations.CreateModel(
            name='SimilarElectron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '可替换元器件',
                'verbose_name_plural': '可替换元器件',
                'db_table': 'm_electron_similar',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=188, verbose_name='名称')),
                ('phone_number', models.CharField(blank=True, max_length=166, null=True, verbose_name='联系方式')),
                ('address', models.CharField(blank=True, max_length=366, null=True, verbose_name='地址')),
            ],
            options={
                'verbose_name': '供应商',
                'verbose_name_plural': '供应商',
                'db_table': 'm_supplier',
            },
        ),
        migrations.CreateModel(
            name='UniversalComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', '元器件'), ('2', '应用方案'), ('3', '成品')], max_length=10, verbose_name='评论类型')),
                ('universal_id', models.IntegerField(verbose_name='编号(元器件,方案,成品)')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'db_table': 'm_electron_comment',
            },
        ),
    ]
