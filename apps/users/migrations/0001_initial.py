# Generated by Django 2.0.7 on 2018-11-23 05:55

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机号码')),
                ('last_ip', models.CharField(blank=True, help_text='上次登录IP', max_length=88, null=True, verbose_name='上次登录IP')),
                ('icon', models.TextField(blank=True, null=True, verbose_name='头像')),
                ('rel_name', models.CharField(blank=True, help_text='真实姓名', max_length=188, null=True, verbose_name='真实姓名')),
                ('qq', models.CharField(blank=True, help_text='QQ号码', max_length=20, null=True, verbose_name='QQ号码')),
                ('is_member', models.BooleanField(default=False, help_text='会员', verbose_name='会员')),
                ('gender', models.CharField(blank=True, choices=[('1', '男'), ('0', '女')], help_text='性别', max_length=2, null=True, verbose_name='性别')),
                ('name', models.CharField(blank=True, max_length=88, null=True, verbose_name='个人发票抬头')),
                ('company_name', models.CharField(blank=True, help_text='公司名称', max_length=188, null=True, verbose_name='公司名称')),
                ('company_tel_number', models.CharField(blank=True, help_text='电话号码', max_length=188, null=True, verbose_name='电话号码')),
                ('company_fax_number', models.CharField(blank=True, help_text='传真', max_length=188, null=True, verbose_name='传真')),
                ('company_address', models.CharField(blank=True, help_text='地址', max_length=188, null=True, verbose_name='公司地址')),
                ('company_tax_number', models.CharField(blank=True, help_text='纳税识别号', max_length=188, null=True, verbose_name='纳税识别号')),
                ('bank_name', models.CharField(blank=True, help_text='开户银行', max_length=88, null=True, verbose_name='开户银行')),
                ('bank_account', models.CharField(blank=True, help_text='开户银行账号', max_length=188, null=True, verbose_name='开户银行账号')),
                ('signer_name', models.CharField(blank=True, help_text='收票人', max_length=188, null=True, verbose_name='收票人')),
                ('signer_mobile', models.CharField(blank=True, help_text='收票人联系电话', max_length=188, null=True, verbose_name='收票人联系电话')),
                ('send_address', models.CharField(blank=True, help_text='发票寄送地址', max_length=188, null=True, verbose_name='发票寄送地址')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 'm_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('province', models.CharField(default='', max_length=188, verbose_name='省份')),
                ('city', models.CharField(default='', max_length=188, verbose_name='城市')),
                ('district', models.CharField(default='', max_length=188, verbose_name='区域')),
                ('address', models.CharField(max_length=188, verbose_name='详细地址')),
                ('signer_name', models.CharField(max_length=188, verbose_name='签收人')),
                ('signer_mobile', models.CharField(max_length=11, verbose_name='签收人号码')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否是默认地址')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='关联消费者')),
            ],
            options={
                'verbose_name': '收货地址',
                'verbose_name_plural': '收货地址',
                'db_table': 'm_sign_address',
            },
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '自定义权限',
                'verbose_name_plural': '自定义权限',
                'db_table': 'm_custom_permission',
                'permissions': (('custom_permission_electronmanage', '产品管理'), ('custom_permission_electrolist', '产品列表'), ('custom_permission_schememanage', '方案管理'), ('custom_permission_schemelist', '方案列表'), ('custom_permission_product', '成品管理'), ('custom_permission_productlist', '成品列表'), ('custom_permission_productcustom', '成品制作'), ('custom_permission_usermanage', '用户管理'), ('custom_permission_userlist', '用户列表'), ('custom_permission_ordermanage', '订单管理'), ('custom_permission_config', '平台配置'), ('custom_permission_electrontype', '器件分类'), ('custom_permission_schemetype', '方案分类'), ('custom_permission_producttype', '成品分类'), ('custom_permission_contenttype', '内容管理'), ('custom_permission_freighconfig', '运费配置'), ('custom_permission_website', '网页信息')),
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=88)),
            ],
            options={
                'verbose_name': '行业',
                'verbose_name_plural': '行业',
                'db_table': 'm_Industry',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cname', models.CharField(help_text='菜单中文名称', max_length=366, verbose_name='菜单中文名称')),
                ('ename', models.CharField(help_text='菜单英文名', max_length=366, verbose_name='菜单英文名')),
                ('path', models.CharField(help_text='路由配置', max_length=366, verbose_name='路由配置')),
                ('parent', models.ForeignKey(blank=True, help_text='上级菜单', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='users.Menu', verbose_name='上级菜单')),
                ('permissions', models.ManyToManyField(help_text='权限', to='auth.Permission', verbose_name='权限')),
            ],
            options={
                'verbose_name': '菜单',
                'verbose_name_plural': '菜单',
                'db_table': 'm_menu',
            },
        ),
        migrations.CreateModel(
            name='Professions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_at', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=88)),
            ],
            options={
                'verbose_name': '职业',
                'verbose_name_plural': '职业',
                'db_table': 'm_profession',
            },
        ),
        migrations.CreateModel(
            name='RoleMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Menu', verbose_name='菜单')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group', verbose_name='角色')),
            ],
            options={
                'verbose_name': '角色菜单权限',
                'verbose_name_plural': '角色菜单权限',
                'db_table': 'm_role_menu',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='default_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.Address', verbose_name='默认地址'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='industry',
            field=models.ForeignKey(blank=True, help_text='行业', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ins_i', to='users.Industry', verbose_name='行业'),
        ),
        migrations.AddField(
            model_name='user',
            name='profession',
            field=models.ForeignKey(blank=True, help_text='职业', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_p', to='users.Professions', verbose_name='职业'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
